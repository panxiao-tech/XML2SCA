/**
 * This file is automatically generated using [XML2SCA] 
 * Contact : panxiao.tech@gmail.com
 * Web     : http://panxiao.tech/tools/xml2sca/
 * 
 * @file    sensor_adc_example/src/sca_tdf_sine.cpp
 * @author  Xiao Pan (pan@cs.uni-kl.de)
 * @date    10:46:05 Apr 16 2018
 * @section LICENSE License (ADD YOUR LICENSE HERE)
 *  
 * @section DESCRIPTION Description (ADD YOUR DESCRIPTION HERE)
 *          Example project of [XML2AMS]
 * 
 */


#include "sca_tdf_sine.h"

//  
//! Custom Constructor 
//  
sca_tdf_sine::sca_tdf_sine(sc_core::sc_module_name nm,
		double _freq,
		double _amp,
		double _offset )
{
	 // Local variables store module parameters
	 p_freq = _freq;
	 p_amp = _amp;
	 p_offset = _offset;

}


void  sca_tdf_sine::set_attributes(){ /* Insert your  code here */    }

void  sca_tdf_sine::initialize()
{
    //<<< START OF USER-ADDED-CODE >>>>
    actval = 0;
    sample_time = pout_sine.get_timestep().to_seconds();
    //<<< END OF USER-ADDED-CODE >>>
}

void sca_tdf_sine::processing()
{
    //<<< START OF USER-ADDED-CODE >>>>
    sample_time = pout_sine.get_timestep().to_seconds();
    stepsize = sample_time*1e6*2.*M_PI;
    actval+=stepsize;
    //update output
    pout_sine.write(p_amp*sin(actval)+p_offset);
    //<<< END OF USER-ADDED-CODE >>>
}

// void  sca_tdf_sine::change_attributes(){ /* Insert your  code here */    }
// void  sca_tdf_sine::ac_processing(){  /* Insert your  code here */    }
// void sca_tdf_sine::end_of_simulation(){ /* Insert your  code here */    }
